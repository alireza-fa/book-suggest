version: '3.9'

networks:
  main_book_network:

volumes:
  static:
  media:
  data:

services:
  postgres_project:
    container_name: postgres_project_container
    image: postgres:15
    hostname: ${DB_HOST}
    command: -p ${DB_PORT}
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - ../data/project/postgres:/var/lib/postgresql/data
    networks:
      - main_book_network

  redis_project:
    container_name: ${REDIS_HOST}
    hostname: ${REDIS_HOST}
    image: redis:latest
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - ./redis.conf:/usr/local/etc/redis.conf
    networks:
      - main_book_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "export DJANGO_PORT=${DJANGO_PORT} &&
                    python3 entrypoint.py"
    restart: always
    depends_on:
      - postgres_project
      - redis_project
    networks:
      - main_book_network
    volumes:
      - .:/home/code
      - ./media:/home/code/media
      - ./static:/home/code/static

  nginx_book:
    image: nginx:latest
    hostname: nginx_book
    container_name: nginx_book_container
    command: nginx -g 'daemon off;'
    restart: always
    depends_on:
      - web
    expose:
      - "80"
    ports:
      - "80:80"
    networks:
      - main_book_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./media:/home/code/media
      - ./static:/home/code/static
